#+TITLE: Docker 介绍
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2018-11-27 Tue>
#+TAGS: docker cheatsheet DevOps


[[file:../resource/image/2018/11/docker-architecture.png]]


* Docker

Docker 和虚拟机有着同样的虚拟化的功能，但是 Docker 在完成虚拟化是使用的是“容器”的
技术而非实现虚拟主机的资源，这样带来的好处就是更加轻便。

[[file:../resource/image/2018/11/container-vs-vm.png]]

Docker 的最低依赖是 3.10.x 的 Linux 内核。并且 Docker 可以安装在 Linux，MacOS 和
Windows 10 以上的机器上，安装的方式请参考官网的文档。

* Docker 容器

** 生命周期

- docker create: 创建容器
- docker rename: 重命名容器
- docker run: 创建并启动容器
- docker rm: 删除容器
- docker update: 更新容器运行的资源约束

~docker run~ 是非常常用的一个命令其中比较有用的选项如下：
+ -t: 添加一个 tty 终端
+ -d: 当容器退出后自动进行 detach 操作
+ --volume $HOSTDIR:$DOCKERDIR : 挂载镜像外的磁盘
+ --publish $HOSTPORT:$DOCKERPORT : 暴露端口
+ --name: 制定容器名

** 启动和停止

- docker start: 启动容器
- docker stop: 停止容器
- docker restart: 重启容器
- docker pause: 暂停容器
- docker unpause: 重启暂停的容器
- docker wait: 阻断直到容器停止
- docker kill: 发送 SIGKILL 信号到容器
- docker attach: 连接一个运行的容器

** 查看容器的状态

- docker ps: 显示当前运行的容器， ~-a~ 选项可以显示所有的容器
- docker logs: 显示容器的日志
- docker inspect: 查看所有容器的信息（包括 IP 地址）
- docker events: 获取容器的事件
- docker port: 获取发布的端口
- docker top: 显示容器中的进程
- docker stats: 显示容器资源的使用情况， ~--all~ 显示所有的容器
- docker diff: 显示容器的修改的文件

** 杂项

- docker cp: 在本地和容器之间复制文件
- docker export: 将文件系统导出成压缩文档，并输出到 STDOUT
- docker exec: 在容器里面执行一个指令

常用的 exec 指令如下，可以启动一个 bash 交互环境。

#+BEGIN_SRC sh
  docker exec -it foo /bin/bash
#+END_SRC

* 参考链接

1. [[https://github.com/wsargent/docker-cheat-sheet][docker cheatsheet]]
2. [[https://docs.docker.com/][docker docs]]
