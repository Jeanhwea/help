#+TITLE: pandas
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: 2018-10-12
#+TAGS: python tensorflow machine-learning

* pandas
  pandas 一个是 BSD 许可证下开源的 Python 包，它提供非常方便使用的数据结构和数据
  分析工具。注意有以下几个优点：
  1. 使用 Series 表示一维数据， DataFrame 表示二维数据
  2. 支持对数据的多维度索引
  3. 可以导入和导出 csv ， excel 等其他格式的文件数据
  4. 一些基本的统计功能（均值、方差、标准差等）
** 安装
   安装详细教程见 [[http://pandas.pydata.org/pandas-docs/stable/install.html][here]]。使用 pip 安装命令如下：
   #+BEGIN_SRC sh
     pip install pandas
   #+END_SRC
** 快速上手
*** 导入
    #+BEGIN_SRC python :preamble "# -*- coding: utf-8 -*-" :exports both :session default :results output pp
      import pandas as pd
      import numpy as np
      import matplotlib
      import matplotlib.pyplot as plt
    #+END_SRC

    #+RESULTS:

*** 创建对象
    #+BEGIN_SRC python :preamble "# -*- coding: utf-8 -*-" :exports both :session default :results output pp
      sr = pd.Series([1,3,5,np.nan,6,8])
      print(sr)
      dates = pd.date_range('20130101', periods=6)
      print(dates)
      df = pd.DataFrame(np.random.randn(6,4), index=dates, columns=list('ABCD'))
      print(df)
    #+END_SRC

    #+RESULTS:
    #+begin_example
    0    1.0
    1    3.0
    2    5.0
    3    NaN
    4    6.0
    5    8.0
    dtype: float64
    DatetimeIndex(['2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04',
                   '2013-01-05', '2013-01-06'],
                  dtype='datetime64[ns]', freq='D')
                       A         B         C         D
    2013-01-01  1.760679 -0.445043  0.824394 -2.357059
    2013-01-02  0.228718  0.734372  0.336161  0.278151
    2013-01-03 -0.186779 -0.816538  0.816539  0.305295
    2013-01-04 -1.494693 -0.598261 -0.902628  0.726989
    2013-01-05 -1.025830 -1.120314  1.813333  1.317153
    2013-01-06 -0.118547 -0.405653 -1.585161 -0.774411
    #+end_example

*** 查看对象
    #+BEGIN_SRC python :preamble "# -*- coding: utf-8 -*-" :exports both :session default :results output pp
      print(df.head())
      print(df.tail(3))
      print(df.index)
      print(df.columns)
      print(df.values)
      print(df.describe())
      print(df.T) # transpose
      print(df.sort_index(axis=1, ascending=False))
      print(df.sort_values(by='B'))
    #+END_SRC

    #+RESULTS:
    #+begin_example
    A         B         C         D
    2013-01-01  1.760679 -0.445043  0.824394 -2.357059
    2013-01-02  0.228718  0.734372  0.336161  0.278151
    2013-01-03 -0.186779 -0.816538  0.816539  0.305295
    2013-01-04 -1.494693 -0.598261 -0.902628  0.726989
    2013-01-05 -1.025830 -1.120314  1.813333  1.317153
                       A         B         C         D
    2013-01-04 -1.494693 -0.598261 -0.902628  0.726989
    2013-01-05 -1.025830 -1.120314  1.813333  1.317153
    2013-01-06 -0.118547 -0.405653 -1.585161 -0.774411
    DatetimeIndex(['2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04',
                   '2013-01-05', '2013-01-06'],
                  dtype='datetime64[ns]', freq='D')
    Index(['A', 'B', 'C', 'D'], dtype='object')
    [[ 1.76067897 -0.44504313  0.82439376 -2.35705889]
     [ 0.22871828  0.7343724   0.33616136  0.27815096]
     [-0.18677858 -0.81653807  0.81653861  0.3052952 ]
     [-1.49469256 -0.5982608  -0.9026279   0.7269889 ]
     [-1.02583002 -1.12031411  1.81333322  1.3171533 ]
     [-0.11854686 -0.40565299 -1.58516093 -0.774411  ]]
                  A         B         C         D
    count  6.000000  6.000000  6.000000  6.000000
    mean  -0.139408 -0.441906  0.217106 -0.083980
    std    1.128811  0.634033  1.248375  1.307448
    min   -1.494693 -1.120314 -1.585161 -2.357059
    25%   -0.816067 -0.761969 -0.592931 -0.511271
    50%   -0.152663 -0.521652  0.576350  0.291723
    75%    0.141902 -0.415501  0.822430  0.621565
    max    1.760679  0.734372  1.813333  1.317153
       2013-01-01  2013-01-02     ...      2013-01-05  2013-01-06
    A    1.760679    0.228718     ...       -1.025830   -0.118547
    B   -0.445043    0.734372     ...       -1.120314   -0.405653
    C    0.824394    0.336161     ...        1.813333   -1.585161
    D   -2.357059    0.278151     ...        1.317153   -0.774411

    [4 rows x 6 columns]
                       D         C         B         A
    2013-01-01 -2.357059  0.824394 -0.445043  1.760679
    2013-01-02  0.278151  0.336161  0.734372  0.228718
    2013-01-03  0.305295  0.816539 -0.816538 -0.186779
    2013-01-04  0.726989 -0.902628 -0.598261 -1.494693
    2013-01-05  1.317153  1.813333 -1.120314 -1.025830
    2013-01-06 -0.774411 -1.585161 -0.405653 -0.118547
                       A         B         C         D
    2013-01-05 -1.025830 -1.120314  1.813333  1.317153
    2013-01-03 -0.186779 -0.816538  0.816539  0.305295
    2013-01-04 -1.494693 -0.598261 -0.902628  0.726989
    2013-01-01  1.760679 -0.445043  0.824394 -2.357059
    2013-01-06 -0.118547 -0.405653 -1.585161 -0.774411
    2013-01-02  0.228718  0.734372  0.336161  0.278151
    #+end_example
    
*** 部分选取
    #+BEGIN_SRC python :preamble "# -*- coding: utf-8 -*-" :exports both :session default :results output pp
      # single column
      print(df['A'])
      # using []
      print(df[0:3])
      print(df['20130102':'20130104'])
      # using label
      print(df.loc[dates[0]])
      print(df.loc[:,['A','B']])
      print(df.loc['20130102':'20130104',['A','B']])
      print(df.loc[dates[0],'A'])
      # using position
      print(df.iloc[3])
      print(df.iloc[3:5,0:2])
      print(df.iloc[[1,2,4],[0,2]])
      # using condition
      print(df[df.A > 0])
      print(df[df > 0])
    #+END_SRC

    #+RESULTS:
    #+begin_example
    2013-01-01    1.760679
    2013-01-02    0.228718
    2013-01-03   -0.186779
    2013-01-04   -1.494693
    2013-01-05   -1.025830
    2013-01-06   -0.118547
    Freq: D, Name: A, dtype: float64
                       A         B         C         D
    2013-01-01  1.760679 -0.445043  0.824394 -2.357059
    2013-01-02  0.228718  0.734372  0.336161  0.278151
    2013-01-03 -0.186779 -0.816538  0.816539  0.305295
                       A         B         C         D
    2013-01-02  0.228718  0.734372  0.336161  0.278151
    2013-01-03 -0.186779 -0.816538  0.816539  0.305295
    2013-01-04 -1.494693 -0.598261 -0.902628  0.726989
    A    1.760679
    B   -0.445043
    C    0.824394
    D   -2.357059
    Name: 2013-01-01 00:00:00, dtype: float64
                       A         B
    2013-01-01  1.760679 -0.445043
    2013-01-02  0.228718  0.734372
    2013-01-03 -0.186779 -0.816538
    2013-01-04 -1.494693 -0.598261
    2013-01-05 -1.025830 -1.120314
    2013-01-06 -0.118547 -0.405653
                       A         B
    2013-01-02  0.228718  0.734372
    2013-01-03 -0.186779 -0.816538
    2013-01-04 -1.494693 -0.598261
    1.7606789659361515
    A   -1.494693
    B   -0.598261
    C   -0.902628
    D    0.726989
    Name: 2013-01-04 00:00:00, dtype: float64
                       A         B
    2013-01-04 -1.494693 -0.598261
    2013-01-05 -1.025830 -1.120314
                       A         C
    2013-01-02  0.228718  0.336161
    2013-01-03 -0.186779  0.816539
    2013-01-05 -1.025830  1.813333
                       A         B         C         D
    2013-01-01  1.760679 -0.445043  0.824394 -2.357059
    2013-01-02  0.228718  0.734372  0.336161  0.278151
                       A         B         C         D
    2013-01-01  1.760679       NaN  0.824394       NaN
    2013-01-02  0.228718  0.734372  0.336161  0.278151
    2013-01-03       NaN       NaN  0.816539  0.305295
    2013-01-04       NaN       NaN       NaN  0.726989
    2013-01-05       NaN       NaN  1.813333  1.317153
    2013-01-06       NaN       NaN       NaN       NaN
    #+end_example
*** 赋值

* 参考链接
1. [[http://pandas.pydata.org/pandas-docs/stable/10min.html][10 Minutes to pandas]]

